@model RowsCount

@{
    ViewData["Title"] = "Generated";
}

<div class="text-center">
    <br />
    <h1 class="display-4">Records List</h1>
    <hr />
    <h2 class="display-6">Fuel records:</h2> <h2 class="text-primary">@Model.fuels</h2>    @* <a onclick="downloaded()" href="@Url.Action("DownloadFile", "Fuels", new { fileNumber = 1 })" type="button" class="btn btn-outline-primary btn-sm">Download Fuels</a><br /> *@

    <br />
    <h2 class="display-6">Lube records: </h2><h2 class="text-danger">@Model.Lubes</h2>     @* <a onclick="downloaded()" href="@Url.Action("DownloadFile", "Fuels", new { fileNumber = 2 })" type="button" class="btn btn-outline-danger btn-sm">Download Lubes</a><br /> *@

    <br />
    <h2 class="display-6">Safedrop records:</h2> <h2 class="text-success">@Model.safedrops</h2>     @* <a onclick="downloaded()" href="@Url.Action("DownloadFile", "Fuels", new { fileNumber = 3 })" type="button" class="btn btn-outline-success btn-sm">Download Safedrops</a><br /> *@
    <br />

    @* <button class="btn btn-primary" onclick="timer()"> swal Generate </button> *@
    <br />

    <a id="closeTabButton" asp-controller="Fuels" asp-action="Close" class="btn btn-primary" style="width:150px">Close</a>
</div>

@Html.Raw(TempData["msg"])

<script>

    function noJournal() {
        Swal.fire({
            icon: "error",
            title: "No database found!",
            text: "It seems that journal.sqlite is missing"
        }).then((result) => {
            if (result.isConfirmed) {
                window.close();
            }
        });
    }

    document.getElementById('closeTabButton').addEventListener('click', function () {
        window.parent.close();
    });

    function exit() {
        window.open('', '_self').close()
    }

    function generate(){
        Swal.fire("Sample Generate");
    }

    function success() {
        Swal.fire({
            icon: "success",
            title: "Generation Success!",
            showConfirmButton: true,
            // timer: 1500
        });
    }

    function downloaded() {
        Swal.fire({
            icon: "success",
            title: "Download Success!",
            showConfirmButton: true,
            // timer: 1500
        });
    }
    
    function timer() {
        let timerInterval;
        Swal.fire({
            title: "Generating...",
            html: "Please do not close the POS",
            timer: 3000,
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
                const timer = Swal.getPopup().querySelector("b");
                timerInterval = setInterval(() => {
                    timer.textContent = `${Swal.getTimerLeft()}`;
                }, 100);
            },
            willClose: () => {
                clearInterval(timerInterval);
            }
        }).then((result) => {
            if (result.dismiss === Swal.DismissReason.timer) {
                console.log("I was closed by the timer");
            }
        });
    }

</script>